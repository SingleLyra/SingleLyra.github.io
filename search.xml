<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Using neural nets to recognize handwritten digits</title>
      <link href="/2018/12/30/digits/"/>
      <url>/2018/12/30/digits/</url>
      
        <content type="html"><![CDATA[<p>人体视觉是世界上的奇迹之一。<br>考虑下面这样的一个手写数字序列：</p><p>(It won’t be continued.QAQ)</p><a id="more"></a><p><img src="C:\Users\Filene\AppData\Roaming\Typora\typora-user-images\1546105017586.png" alt="1546105017586"><br>大多数人能毫不费力地认出这是504192.但是，毫不费力是骗人(deceptive)的。在我们大脑每个半球(hemisphere)中，人们有一个基本视觉皮质(cortex)，记为$V_1$，包含140,000,000个神经元，在神经元间有10,000,000,000个神经链接。然而，人们的视觉并不仅有一个$V_1$，而是一个串联的皮质。串联里面包括$V_2,V_3,V_4…$，这些皮质做着更加复杂的东西。</p><p>……</p><p>1.In each hemisphere(半球) of our brain, humans have a primary<br>visual cortex(皮质), also known as V1, containing 140 million neurons, with<br>tens of billions of connections between them.  </p><p>2.Most people effortlessly recognize those digits as 504192. That ease is deceptive(欺骗的).</p><p>3.Rather(== however), we humans are stupendously, astoundingly [都是惊人的意思] good at making sense of what our<br>eyes show us. </p><p>4.get lost in a morass(困境) of exceptions and caveats(警告) and special cases.  </p><p>5.without human intervention.(干预)</p><p>6.We’re focusing on handwriting recognition because it’s an excellent<br>prototype(样本) problem for learning about neural networks in general.  </p><p>7.But along the way we’ll develop many key ideas about<br>neural networks, including two important types of artificial(人工的) neuron<br>(the perceptron(感知) and the sigmoid(sig) neuron), and the standard learning<br>algorithm for neural networks, known as stochastic(随机) gradient(梯度) descent(下降).</p><p>如何构建与非门：</p><p>设立$bias = 3,w_1=w_2=-2$.</p><p>则$output = [w_1x_1+w_2x_2+bias&gt;0]$</p><p>分别验证$00,11,01,10$可得。</p><p>构建与门：</p><p>设立$bias = -3,w_1=w_2=2$即可。</p><p>另外，与非是基本运算，你可以通过与非计算任何的位运算。</p><p>a xor b=(a nand a nand b) = ​ </p><p>Don’t panic if you’re not comfortable with partial derivatives! </p><p><strong>perceptrons</strong>:0/1感知器，值为$[\sum w_ix_i+b &gt; 0]$</p><p>把perceptrons改为sigmoid neurons，结果也随之变化。</p><p><strong>MLP terminology</strong></p><p>If we did have<br>loops, we’d end up with situations where the input to the σ<br>function depended on the output.  That’d be hard to make sense of, and<br>so we don’t allow such loops.</p><p><a href="http://en.wikipedia.org/wiki/Recurrent_neural_network" target="_blank" rel="noopener">recurrent   neural networks</a>：RNN，递归神经网络</p><p>However, there are other models of artificial neural networks in which<br>feedback loops are possible.  These models are called<br><a href="http://en.wikipedia.org/wiki/Recurrent_neural_network" target="_blank" rel="noopener">recurrent   neural networks</a>. The idea in these models is to have neurons which<br>fire for some limited duration of time, before becoming quiescent.<br>That firing can stimulate other neurons, which may fire a little while<br>later, also for a limited duration.  That causes still more neurons to<br>fire, and so over time we get a cascade of neurons firing.  Loops<br>don’t cause problems in such a model, since a neuron’s output only<br>affects its input at some later time, not instantaneously.(存疑QAQ)</p><p>C(w,b) = $\frac 1 {2n}\sum_x mode [(y(x) - output)]^2 $</p><p>其中$y(x)$为这个输入理论上得到的答案。</p><p><em>gradient descent</em></p><p>1/2m (O0 + O1x^i + y^i)^2</p><p>dO0-&gt;1/m(O0 + O1x^i + y^i)</p><p>$dO1-&gt;x^i/m(O0 + O1x^i + y^i)$</p>]]></content>
      
      
      
        <tags>
            
            <tag> to_be_continue_ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>English_Note</title>
      <link href="/2018/12/23/English-Note/"/>
      <url>/2018/12/23/English-Note/</url>
      
        <content type="html"><![CDATA[<h2 id="Unit-5"><a href="#Unit-5" class="headerlink" title="Unit 5"></a>Unit 5</h2><a id="more"></a><h3 id="Words"><a href="#Words" class="headerlink" title="Words:"></a>Words:</h3><p>1.<strong>confound</strong>: (vt.) fail to distinguish.</p><p>e.g. He tells lies so often that I believe that he often confounds fact and fiction(lies).</p><p>2.<strong>dense</strong>: (adj.) difficult to see through / containing a lot of matter in a small place.</p><p>e.g. The fog is so dense that I confound my son with my father.</p><p>3.<strong>flushed</strong>: quite excited</p><p>e.g. She was flushed for the dense fog.</p><p>4.<strong>fragment</strong>: (n.)a small piece of something which is broken off.</p><p>e.g. the fragment of the mirror</p><p>5.<strong>fragrance</strong>: (n.) a pleasent smell</p><p>e.g. I smell the fragrance of this flower.</p><p>6.<strong>gush</strong>: (vi.) flow or send out quickly in large amounts.</p><p>e.g. Oil gushed out from this hole.</p><p>7.<strong>languor</strong>: (n.) tiredness of mind and body</p><p>e.g. She has a feeling of languor.</p><p>8.<strong>linger</strong>: (vi.) stay sw. a little longer cuz u don’t wanna leave</p><p>e.g. She lingered after the concert, hoping to get the sign of the star.</p><p>9.<strong>prey</strong>: (v.) (~ on) let sb. be unable to stop thinking and worrying about sth.</p><p>e.g. The gang has been preying on foreign foreign tourists.</p><p>10.<strong>compatriot</strong> (n.) sb who is from the same country.</p><p>e.g. People living aboard like staying with their compatriot.</p><p>11.cricket (n.) 板球运动</p><p>12.<strong>desperately</strong> (adv.) 十分地</p><p>13.<strong>facet</strong> (n.) aspect; part; …</p><p>e.g. She was involved(包含) in all facets of the bussiness.</p><p>14.<strong>invlove:</strong>(v.)(1) occupy or engage the interest of</p><p>e.g. <em>“His story completely involved me during the entire afternoon”</em></p><p>(2)make complex or intricate or complicated</p><p>e.g.<em>“The situation was rather involved”</em></p><p>15.<strong>snob</strong> (n.)a person with an exaggerated respect for high social position or wealth<br>who seeks to associate with social superiors and dislikes people or<br>activities regarded as lower-class.</p><p>b.e.g. He was such a snob that he despises other local people and doesn’t let me play with them.</p><hr><h2 id="Unit-6-amp-amp-7"><a href="#Unit-6-amp-amp-7" class="headerlink" title="Unit 6&amp;&amp;7"></a>Unit 6&amp;&amp;7</h2><p>1.<strong>assert</strong> (vt.) (1)(~oneself): to insist/behave in a determined way:</p><p>e.g.A timid man can’t assert himself. </p><p>(2) state or announce <strong>forcefully</strong>:</p><p>e.g. The goverment has repeatedly asserted that it will not change its policy.</p><p>2.<strong>intrude</strong> (v.) go into a place or situation in which one is not wanted to be.[invade]</p><p>e.g. One of their planes instruded into our airspace.</p><p>3.<strong>scale</strong> (n.) (1) the size, level or amount of sth. </p><p>e.g. work best on a small scale</p><p>(2) a system of numbers that is used for measuring the amount,speed,quality,etc. of sth.</p><p>e.g. On a scale of one to ten, how do you rate his performance?</p><p>4.<strong>territorial</strong> (adj.) characterized by a behavior of an animal or a group of animals occupying and defending an area believed to be their own</p><p>e.g. Many types of birds are highly territorial.</p><p>5.<strong>collapse</strong> / kəˈlæps / (v.) fall down or inward suddenky as a result of pressure or loss of strength or support</p><p>e.g. The bridge collapsed after the earthquake.</p><p>6.<strong>odor</strong> :(n.) pleasant or unpleasent smell</p><p>e.g. The delicious odor of freshly-made-coffee awakens me every morning.</p><p>7.<strong>olfactory</strong> (adj.)  connected with the sense of smell</p><p>e.g. Dogs have very sensitive olfactory ability.</p><p>8.<strong>paralyze</strong>:(vt.) make sb. lose the ability to move.</p><p>e.g. Her legs are paralyzed in a crash.</p><p>9.<strong>permanently</strong>(adv.): always or lasting for a long time (<strong>OPP</strong>: <strong>temporarily</strong>)</p><p> e.g. She is permanently unable to move any part of their body below their neck.</p><p>[=&gt; <strong>quadriplegic</strong>(n.) =&gt; someone who is <strong>permanently</strong> unable to move]</p><p>10.<strong>reinforcement</strong>:(n.)[strengthening]</p><p>e.g. We need to give students plenty of positive reinforcement.</p><p>11.<strong>retrieve</strong>:(vt.) fetch/find sth.back</p><p>e.g. I must retrieve my suitcase, with my key inside, from the office.</p><p>12.<strong>rubble</strong>:(n.)fragment of stones.</p><p>e.g. The bombing left piles of rubble in the village.</p><p>13.<strong>stimulus</strong> (n.) sth that make sb. or sth. move or react</p><p>e.g. The infant begins to react more to visual stimuli.(plural)</p><p>14.<strong>unstrew</strong> (vt.) undo by twisting </p><p>e.g. I can’t unscrew the top of this bottle.</p><p>15.<strong>dimension</strong> (n.) a part of a situation or a quality involved in it.</p><p>e.g. Doing volunteer work has added a whole new dimension to my life.</p><p>16.<strong>elicit</strong> (v.) to succeed in getting information or a reaction from someone, especially when this is difficult : </p><p>e.g. The test uses pictures to elicit words from the child. </p><p>17.<strong>impulsive(ness)</strong> :(adj.(n.)) someone who is impulsive does things without considering the possible dangers or problems first  </p><p>e.g. Rosa was impulsive and sometimes regretted things she’d done. </p><p>18.<strong>insulate</strong>: to cover or protect something with a material that stops electricity, sound, heat etc from getting in or out </p><p>e.g. Pipes may need insulating against the cold. </p><p>19.<strong>ordinary</strong>:average, common, or usual, not different or special</p><p>e.g. It’s just an ordinary camera. </p><p>“<strong>ordinarily</strong>“:(sentence adv.) usually</p><p>e.g. Ordinarily, he goes back at 9:00.</p><p>20.<strong>perspective</strong> 1)viewpoint</p><p>e.g. give someone a new perspective</p><p>21.<strong>unattached</strong>: not married</p><p>e.g. She remained unattached until she got a doctorate degree at the age of 35.</p><hr><h2 id="Unit-8"><a href="#Unit-8" class="headerlink" title="Unit 8"></a>Unit 8</h2><p>1.<strong>investigator</strong> (n.) sb. whose job is to officially find out the facts about sth.(expecially crimes)</p><p>e.g. police investigators</p><p>2.<strong>liable</strong>(adj.) :likely (sth. will be probably happen)</p><p>e.g. Snow showers are liable tomorrow.</p><p>3.<strong>mill</strong>:(n.)  a factory that produces materials such as cotton, cloth, or steel</p><p>e.g. an old cotton mill</p><p>4.<strong>predestomation</strong>:(n.) fate;</p><p>e.g. believe in predestomation</p><p>5.<strong>substantially</strong>(adj.) (1)essentially / basically =&gt; stating the most basic fact of sth.</p><p>e.g. There are one or two minor differences, but they’re substantially the same text. </p><p>(2)very much / a lot:</p><p>e.g. substantially higher prices</p><p>6.<strong>fascinate</strong> (vt.) attract or interest sb. greatly</p><p>e.g. It’s a subject that has always fascinated me.</p><p>7.<strong>fraternal</strong> (adj.)showing a special friendliness</p><p>e.g. fraternal solidarity(loyalty and general agreement between all the people in a group) amongst union members </p><p>8.<strong>nonconformist</strong> (n.)one who is not bound or refuses to be bound by accepted beliefs,customs,and etc.</p><p>e.g. He flet out of place(not suitable), a nonconformist in a society where conformity was highly prized.</p><hr><h3 id="English-II-临时背QAQ"><a href="#English-II-临时背QAQ" class="headerlink" title="English II(临时背QAQ)"></a>English II(临时背QAQ)</h3><p>1.adrenalin n.肾上腺素</p><p>2.agonize vi.苦恼</p><p>3.amass vt.积累</p><p>4.amiable adj.友好的</p><p>5.aggravate vt.加剧</p><p>6.appliance n.家用电器</p><p>7.aspire vi.渴望</p><p>8.attendant n.服务人员</p><p>9.bewildering adj.令人困惑的</p><p>10.blacksmith n.(people repair iron)</p><p>11.bland adj.(食物)清淡的</p><p>12.bout n.拳击或摔跤</p><p>13.broadly adv.多方面地</p><p>14.bygone adj.past</p><p>15.callous adj.冷漠地，漠不关心地</p><p>16.cardiac adj.心脏的</p><p>17.chronic adj.慢性的，长期的</p><p>18.connotation n.含义，内涵</p><p>19.contentment n.满足</p><p>20.convey vt.表达 传达</p><p>21.</p>]]></content>
      
      
      
        <tags>
            
            <tag> English </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Codeforces</title>
      <link href="/2018/12/06/Codeforces/"/>
      <url>/2018/12/06/Codeforces/</url>
      
        <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><br>这里汇聚了一些Codeforces的做题记录，正在缓慢鸽新中。</excerpt></p><a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""><hr><h1 id="518-Div-1"><a href="#518-Div-1" class="headerlink" title="#518(Div.1)"></a>#518(Div.1)</h1><p>题目A:</p><p><a href="https://codeforces.com/contest/1067/problem/A" target="_blank" rel="noopener">Array Without Local Maximums </a></p><p>$a_1\leq a_2$, $a_n \le a_{n-1}$ ,$\forall i \in [2,n-1],a_{i} \le max(a_{i-1}, \,\, a_{i+1})$</p><p>有些位置可以任意取[1,200]的数，有些位置已经固定了没办法放数字。</p><p>求满足上述条件的序列数。</p><p>题解：</p><p>考虑dp,记录$f[i][j][0/1/2]$分别代表第$i$个数为$j$并且与前一个数的关系为=.&lt;.&gt;的方案数。</p><p>那么考虑记录前缀和/后缀和转移即可。</p><p>代码:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Rep(i,n) for(int i = 1;i &lt;= n;++ i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Dwn(i,n) for(int i = n; i;-- i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = (<span class="keyword">int</span>)<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">int</span> f[N][<span class="number">205</span>][<span class="number">3</span>],a[N],n;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">f[i][j][0] = f[i-1][j][0/1/2];     //==</span></span><br><span class="line"><span class="comment">f[i][j][1] = f[i-1][&gt; j][0/1];        //a[i] &lt; a[i-1]</span></span><br><span class="line"><span class="comment">f[i][j][2] = f[i-1][&lt; j][0/1/2];   //a[i] &gt; a[i-1]</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">Rep(i,n)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line"><span class="keyword">if</span>(a[<span class="number">1</span>] == <span class="number">-1</span>)Rep(j,<span class="number">200</span>)f[<span class="number">1</span>][j][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> f[<span class="number">1</span>][a[<span class="number">1</span>]][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= n;++ i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> r1 = <span class="number">0</span>,r2 = <span class="number">0</span>;</span><br><span class="line">Dwn(j,<span class="number">200</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] == <span class="number">-1</span>)f[i][j][<span class="number">0</span>] = ((<span class="keyword">long</span> <span class="keyword">long</span>)f[i<span class="number">-1</span>][j][<span class="number">0</span>] + f[i<span class="number">-1</span>][j][<span class="number">1</span>] + f[i<span class="number">-1</span>][j][<span class="number">2</span>]) % mod;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(j == a[i])f[i][j][<span class="number">0</span>] = ((<span class="keyword">long</span> <span class="keyword">long</span>)f[i<span class="number">-1</span>][j][<span class="number">0</span>] + f[i<span class="number">-1</span>][j][<span class="number">1</span>] + f[i<span class="number">-1</span>][j][<span class="number">2</span>]) % mod;</span><br><span class="line"><span class="keyword">if</span>(a[i] == <span class="number">-1</span>)</span><br><span class="line">f[i][j][<span class="number">1</span>] = r1;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(j == a[i]) </span><br><span class="line">f[i][a[i]][<span class="number">1</span>] = r1;</span><br><span class="line">(r1 += f[i<span class="number">-1</span>][j][<span class="number">1</span>]) %= mod;</span><br><span class="line">(r1 += f[i<span class="number">-1</span>][j][<span class="number">0</span>]) %= mod;</span><br><span class="line">&#125;</span><br><span class="line">Rep(j,<span class="number">200</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] == <span class="number">-1</span>)</span><br><span class="line">f[i][j][<span class="number">2</span>] = r2;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(j == a[i])</span><br><span class="line">f[i][j][<span class="number">2</span>] = r2;</span><br><span class="line">(r2 += f[i<span class="number">-1</span>][j][<span class="number">0</span>]) %= mod;</span><br><span class="line">(r2 += f[i<span class="number">-1</span>][j][<span class="number">1</span>]) %= mod;</span><br><span class="line">(r2 += f[i<span class="number">-1</span>][j][<span class="number">2</span>]) %= mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(a[n] == <span class="number">-1</span>)Rep(i,<span class="number">200</span>)(((sum += f[n][i][<span class="number">0</span>]) %= mod) += f[n][i][<span class="number">1</span>]) %= mod;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> i = a[n];</span><br><span class="line">(((sum += f[n][i][<span class="number">0</span>]) %= mod) += f[n][i][<span class="number">1</span>]) %= mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; sum &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题目B:</p><p><a href="https://codeforces.com/contest/1067/problem/B" target="_blank" rel="noopener">Multihedgehog</a></p><p>定义$1$级刺猬是只有一个点至少有$3$的度，与之相连的点都是度数为$1$的点，这一个点称为中心。</p><p>k级刺猬的意思是连着的点都是k-1级刺猬的中心。</p><p>那么很容易看出这个k级刺猬是个树，现在要你判断一下一棵树是不是k级刺猬。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Rep(i,n) for(int i = 1;i &lt;= n;++ i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> v edge[i].to</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RepG(i,x) for(int i = head[x];~ i;i = edge[i].next)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = (<span class="keyword">int</span>)<span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> head[N],cnt;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span>&#123;</span><span class="keyword">int</span> next,to;&#125;edge[N &lt;&lt; <span class="number">1</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">edge[cnt] = (Edge)&#123;head[a],b&#125;,head[a] = cnt ++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,k,q[N],lv[N],od[N],d[N]; <span class="keyword">bool</span> del[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;k);</span><br><span class="line"><span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="keyword">sizeof</span>(head));</span><br><span class="line">Rep(i,n<span class="number">-1</span>)&#123;<span class="keyword">int</span> a,b; <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b); save(a,b),save(b,a); d[a]++,d[b]++;&#125;</span><br><span class="line"><span class="keyword">int</span> h = <span class="number">0</span>,t = <span class="number">-1</span>;</span><br><span class="line">Rep(i,n)<span class="keyword">if</span>(d[i] == <span class="number">1</span>)q[++ t] = i;</span><br><span class="line">Rep(i,n)od[i] = d[i]; <span class="comment">// org_d</span></span><br><span class="line"><span class="keyword">int</span> cur = <span class="number">0</span>,mx = <span class="number">-1</span>,mxn = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(h &lt;= t)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> x = q[h ++];</span><br><span class="line">++ cur;</span><br><span class="line"><span class="comment">//printf("%d ",x);</span></span><br><span class="line">RepG(i,x)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!del[v])</span><br><span class="line">&#123;</span><br><span class="line">d[v] --;</span><br><span class="line"><span class="keyword">if</span>(!lv[v])lv[v] = lv[x] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(lv[v] != lv[x] + <span class="number">1</span>)<span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">"No"</span>),<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!del[v] &amp;&amp; d[v] == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>((lv[v] == lv[x] + <span class="number">1</span>) &amp;&amp; (od[v] &gt;= <span class="number">4</span> || (cur == n - <span class="number">2</span> &amp;&amp; od[v] == <span class="number">3</span>))); <span class="comment">//lv[v] = lv[x] + 1;</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(lv[v] != lv[x] + <span class="number">1</span> || od[v] &lt;= <span class="number">3</span>)&#123; <span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">"No"</span>),<span class="number">0</span>; lv[v] = <span class="number">0</span>; &#125;</span><br><span class="line">q[++ t] = v;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(mx &lt; lv[x])mx = max(lv[x],mx),mxn = x;</span><br><span class="line">del[x] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(cur == n &amp;&amp; mx == k &amp;&amp; od[mxn] &gt;= <span class="number">3</span>)<span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题目C:</p><p><a href="https://codeforces.com/contest/1067/problem/C" target="_blank" rel="noopener">Knights</a></p><p>题意：</p><p>给$n$个马，现在你能随便放置它。放置结束后，如果一个点同时被四个马能踩到的话(不考虑别马脚)，那么这个点会自动再放上一个马。现在求一种构造方案使得最终站在棋盘上的马多于$\lfloor \frac  {n^2}{10} \rfloor$个。</p><p>题解：</p><p>构造题。两种构造方式：</p><p>1.画一个真·十字。</p><p>2.在第一层放2/3个，第4层放1/3个。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Rep(i,n) for(int i = 1;i &lt;= n;++ i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">int</span> r = n / <span class="number">3</span>;</span><br><span class="line">Rep(i,r)<span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,i*<span class="number">2</span>,<span class="number">4</span>);</span><br><span class="line">Rep(i,n-r)<span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,i,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题目D：</p><p>待补。</p><p>题目E：</p><p><a href="https://codeforces.com/contest/1067/problem/E" target="_blank" rel="noopener">Random Forest Rank</a></p><p>题意：</p><p>给一个树，每个边有$50$%的概率消失。消失之后变成了森林。定义一个森林的权值为其邻接矩阵的秩。求期望权值是多少。</p><p>题解：</p><p>据说是个结论题：</p><p>结论：一个森林的邻接矩阵的秩是$2*$最大匹配数(树是二分图)。</p><p>*证明：</p><p>现在先考虑怎么求一个树的最大匹配：</p><p>$f[i][0/1]$表示以$i$为根的子树，目前(没有/有)被匹配的最大匹配数。</p><p>可以写出转移方程:</p><p>$f[i][0]=\sum max{f[v][0],f[v][1]}$</p><p>$f[i][1] = max{f[v][0] + 1 + f[i][0] - f[v][1]}$</p><p>之后算一下每条边有可能消失的总的方案数：</p><p>(DP不好不会算)</p></the>]]></content>
      
      
      
    </entry>
    
  
  
</search>
